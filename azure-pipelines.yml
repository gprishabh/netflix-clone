trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageNameFrontend: 'netflix-ui'
  imageNameBackend: 'netflix-api'
  dockerHubConnection: 'rishabh-dockerhub-conn'
  dockerHubUsername: 'rkhosla'

steps:
- task: DockerInstaller@0
  inputs:
    dockerVersion: '17.09.0-ce'

# - task: Docker@2
#   displayName: 'Build & Push Frontend Image'
#   inputs:
#     containerRegistry: '$(dockerHubConnection)'
#     repository: '$(dockerHubUsername)/$(imageNameFrontend)'
#     command: 'buildAndPush'
#     Dockerfile: 'netflix-ui/Dockerfile'
#     tags: 'latest'

# - task: Docker@2
#   displayName: 'Build & Push Backend Image'
#   inputs:
#     containerRegistry: '$(dockerHubConnection)'
#     repository: '$(dockerHubUsername)/$(imageNameBackend)'
#     command: 'buildAndPush'
#     Dockerfile: 'netflix-api/Dockerfile'
#     tags: 'latest'

- task: PublishBuildArtifacts@1
  displayName: 'Publish docker-compose.yml as artifact'
  inputs:
    PathtoPublish: 'docker-compose.yml'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: CopyFilesOverSSH@0
  displayName: 'Securely copy files to the remote machine'
  inputs:
    sshEndpoint: 'gcp-ssh-connection'
    sourceFolder: '$(System.DefaultWorkingDirectory)/drop'
    targetFolder: '/netflix-clone/'

- task: SSH@0
  displayName: 'Run shell inline on remote machine'
  inputs:
    sshEndpoint: 'gcp-ssh-connection'
    runOptions: inline
    inline: |
     cd ~/netflix-clone
     
     docker-compose down
     docker-compose up -d
